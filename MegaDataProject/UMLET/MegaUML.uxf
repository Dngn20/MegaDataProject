<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>660</y>
      <w>490</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>BiDirectionalNode&lt;Type&gt;
--
- nodeData : Type
- previous : BiDirectional&lt;Type&gt; *
- next : BiDirectionalNode&lt;Type&gt; *
--
+ BiDirectionalNode() : constructor
+ BiDirectionalNode(Type data) : constructor
+ BiDirectionalNode(Type dtata, BiDirectionalNode&lt;Type&gt; * previous, 
BiDirectionalNode&lt;Type&gt; * next) : constructor 

+ getNodeData() : Type
+ setNodeData(Type data) : void
+ getPreviousNode() : BiDirectionalNode&lt;Type&gt; *
+ getNextNode() : BiDirectionalNode&lt;Type&gt; *
+ setNextNode(BiDirectionalNode&lt;Type&gt; * next): void
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>120</y>
      <w>310</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Timer
--

--
-clock_t executionTime;
+void startTimer();
+void stopTimer();
+void resetTimer();
+void displayTimerInformation();
+long getExecutionTimeinMircoseconds();
bg=#3c8b90
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>20</y>
      <w>380</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData:int 
- nodePointer : IntNode *
--
//gets/sets
+ getNodeData() : int
+ getNodePointer() : IntNode *
+ setNodeData(int) value : void
+ setNodePointer(IntNode * next) : void

+ IntNode() : constructor
+ IntNode(int value) : init
+ IntNode(int value, IntNode * nextNode) : constructor
bg=blue
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1330</x>
      <y>50</y>
      <w>280</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int 
- front : IntNode * 
--
+ IntNodeArray(int size) : constructor
+ setAtIndex(int index, int value) : void
+ getFromIndex(int index) : int
+ getSize() : int
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>50</x>
      <y>20</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Created by yours truely Duncan Nguyen
Denken wuz heer
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>360</y>
      <w>420</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
Data Members
- nodeData : Type
- nodePointer : Node&lt;Type&gt; *

--
Constructors
+ Node() : constructor
+ Node(Type Value) : contructor
+ Node(Type data, Node&lt;Type&gt; * pointer) : constructor
Methods
+ getNodeData() : Type
+ getNodePointer() : Node&lt;Type&gt; *
+ setNodeData(Type data) : void
+ setNodePointer(Node&lt;Type&gt; * next): void 
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>840</x>
      <y>0</y>
      <w>790</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Type Sample
--
bg=yellow
group=1
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>340</y>
      <w>530</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>Array &lt;Type&gt;
--
Data Members
- front : Node&lt;Type&gt; *
- size : int

--
Constructors
+ Array() : constructor
+ Array(int size) : contructor

Advanced
+ ~Array&lt;Type&gt; () : destructor
+ ~Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied): copy constructor

Methods 
+ getSize() : int
+ setAtIndex(int index, Type value) : void
+ getFromIndex(int index) : Type
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>140</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>480</y>
      <w>140</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>350</y>
      <w>430</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>Model:: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *
- end : Node&lt;Type&gt; *
--
+ List&lt;Type&gt;() L constructor
+ List&lt;Type&gt;(constList&lt;Type&gt; &amp; source): copy constructor
+ ~List&lt;Type&gt;(): destructor

+ addAtIndex(int index, Type value): void
+ add(Type value): void
+ remove(int index): Type
+ setAtIndex(int index): Type
+ contains(Type data): bool
+ getSize() const : int
+ getFront() const: Node&lt;Type&gt; *
+ getEnd() const : Node&lt;Type&gt; * 
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>590</y>
      <w>830</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>810.0;60.0;810.0;210.0;10.0;210.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>1160</y>
      <w>190</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Queue
--

--
+ add(Type data) : void
+ remove(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>590</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>840</y>
      <w>490</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>DoubllyLinkedList&lt;Type&gt;
--
- front : BiDirectionalNode&lt;Type&gt; *
- end : BiDirectional&lt;Type&gt; *
- size : int
--
Non virtual methods
+ getSize() const : int
+ getFront() const : BiDirectionalNode&lt;Type&gt; *
+ getEnd() const : BiDirectionalNode&lt;Type&gt; *

virtual methods
+ add(Type value)
+ remove(int)
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>130</x>
      <y>900</y>
      <w>530</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n
fg=blue
lw=2
</panel_attributes>
    <additional_attributes>510.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>1160</y>
      <w>190</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Stack
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1010</x>
      <y>1160</y>
      <w>300</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>CircularlyLinkedList
--
- front : BiDirectionalNode * 
--
+ add(Type) : void
+ addAtIndex(int index, Type data) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>1080</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>1080</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>1080</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>170</y>
      <w>190</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Title
--
Data here
--
Construstor 
Methods</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
